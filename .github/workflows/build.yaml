name: Build & Deploy
on:
  push:
    tags:
      - v*
env:
  PY_COLORS: "1"
  GOTRACEBACK: crash
  GO111MODULE: auto

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set tag name as environment variable
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.2

      - name: setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.9"

      - name: install gopy
        run: go install github.com/go-python/gopy@v0.4.10

      - name: install goimports
        run: go install golang.org/x/tools/cmd/goimports@latest

      - name: Build wheels
        env:
          CIBW_BUILD: cp${{ matrix.python-version }}*
          CIBW_ARCHS: "auto64"
          CIBW_BEFORE_BUILD: |
            go mod download
            go mod verify
            rm -rf ./py_excel_form_extractor ./py_excel_form_extractor.egg-info
            gopy build --output=py_excel_form_extractor -vm=python3 ./pkg/*
          PACKAGE_VERSION: ${{ env.RELEASE_VERSION }}
        run: python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  publish:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
