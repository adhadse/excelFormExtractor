# https://github.com/tuananh/py-event-ruler/blob/main/.github/workflows/publish.yml
name: Build & Deploy
on:
  push:
    tags:
      - v*
env:
  PY_COLORS: "1"
  GOTRACEBACK: crash
  GO111MODULE: auto

jobs:
  build_linux_x86_64:
    # if: false
    name: Linux 311,312,313 x86_64
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5

      - name: copy setup.py
        run: cp setup_ci.py setup.py

      - name: Set Release Version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_BUILD: "cp311*_x86_64 cp312*_x86_64 cp313*_x86_64"
          CIBW_SKIP: "cp36-* cp37-* cp38-* cp39-* *-musllinux_x86_64"
          CIBW_ARCHS: "native"
          CIBW_ENVIRONMENT: "PATH=$PATH:/usr/local/go/bin RELEASE_VERSION=${RELEASE_VERSION}"
          CIBW_ENVIRONMENT_PASS_LINUX: "RELEASE_VERSION"
          CIBW_BEFORE_BUILD: |
            pip install pybindgen
          CIBW_BEFORE_ALL_LINUX: |
            curl -o go.tar.gz https://dl.google.com/go/go1.22.9.linux-amd64.tar.gz
            tar -C /usr/local -xzf go.tar.gz
            go install github.com/go-python/gopy@v0.4.10
            go install golang.org/x/tools/cmd/goimports@v0.16.0
          # CIBW_BUILD_VERBOSITY: 3 # Add verbose output

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-amd64
          path: ./wheelhouse/*.whl

  build_linux_arm:
    name: Linux 311,312,313 aarch64
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - uses: actions/setup-python@v5

      - name: copy setup.py
        run: cp setup_ci.py setup.py

      - name: Set Release Version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_BUILD: "cp311-manylinux_aarch64 cp312-manylinux_aarch64 cp313-manylinux_aarch64"
          CIBW_SKIP: "cp36-* cp37-* cp38-* cp39-*"
          CIBW_ARCHS: "aarch64"
          CIBW_ENVIRONMENT: "PATH=$PATH:/usr/local/go/bin RELEASE_VERSION=${RELEASE_VERSION}"
          CIBW_ENVIRONMENT_PASS_LINUX: "RELEASE_VERSION"
          CIBW_BEFORE_BUILD: |
            pip install pybindgen
          CIBW_BEFORE_ALL_LINUX: |
            curl -o go.tar.gz https://dl.google.com/go/go1.22.7.linux-arm64.tar.gz
            tar -C /usr/local -xzf go.tar.gz
            go install github.com/go-python/gopy@v0.4.10
            go install golang.org/x/tools/cmd/goimports@v0.16.0
          # CIBW_BUILD_VERBOSITY: 3 # Add verbose output

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-arm
          path: ./wheelhouse/*.whl

  publish:
    name: Publish PyPI
    needs: [build_linux_x86_64, build_linux_arm]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v4
      - name: Collect all wheels
        run: |
          ls -R
          mkdir dist
          for f in $(find . -type f -name '*.whl'); do mv ${f} dist; done;
          ls -R dist
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: ./dist
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          print-hash: true
