name: Build & Deploy
on:
  push:
    tags:
      - v*
env:
  PY_COLORS: "1"
  GOTRACEBACK: crash
  GO111MODULE: auto

permissions:
  contents: read
  checks: write
  id-token: write

jobs:
  build:
    # job_id: deploy-to-pypi
    name: Deploy Excel form extractor to PyPi
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set tag name as environment variable
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Cache-Go
        uses: actions/cache@v1
        with:
          path: |
            ~/go/pkg/mod              # Module download cache
            ~/.cache/go-build         # Build cache (Linux)
            ~/Library/Caches/go-build # Build cache (Mac)
            '%LocalAppData%\go-build' # Build cache (Windows)

          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.9" # The Go version to download (if necessary) and use.
      - name: Setup Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          # cache: "pip"
      - name: install Pybindgen & wheel & setuptools
        run: pip3 install pybindgen setuptools wheel
      - name: Download Go dependencies
        run: |
          go mod download
          go mod verify
      - name: install gopy
        run: go install github.com/go-python/gopy@v0.4.10
      - name: install goimports
        run: go install golang.org/x/tools/cmd/goimports@latest
      - name: Build Python module
        run: gopy build --output=py_excel_form_extractor -vm=python3 ./pkg/*
      - name: Creating installable .whl file using the setup.py
        run: |
          PACKAGE_VERSION=${{ env.RELEASE_VERSION }} python3 setup.py bdist_wheel
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
